# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]  
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          # JFrog platform url (for example: https://acme.jfrog.io)
          JF_URL: ${{ secrets.JF_URL }}

          # Basic authentication credentials
          JF_USER: ${{ secrets.JF_USER }}
          JF_PASSWORD: ${{ secrets.JF_PASSWORD }}

      - name: Run JFrog CLI
        run: |
          # Ping the server
          jf rt ping
          # Collect environment variables for the build
          jf rt bce
          # Collect VCS details from git and add them to the build
          jf rt bag
          # Publish build info
          jf rt bp

      - name: Build with Maven
        run: mvn clean install
        
      - name: Deploy to Artifactory
        run: |
          mvn deploy
        env:
          MAVEN_OPTS: -Dmaven.repo.local=./.m2/repository
          ARTIFACTORY_USERNAME: ${{ secrets.JF_USER }}
          ARTIFACTORY_PASSWORD: ${{ secrets.JF_PASSWORD }}          